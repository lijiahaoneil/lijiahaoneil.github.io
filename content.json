[{"title":"iOS开发：注册申明app能够打开某种类型的文档，使其他app通过DIC在你的app中打开文件","date":"2017-01-20T08:25:59.000Z","path":"2017/01/20/iOS开发：注册申明app能够打开某种类型的文档，使其他app通过DIC在你的app中打开文件/","text":"在其他app中看到自己的app，并将文件用自己的app打开，可以通过plist注册自己的应用，在plist中设置Document types和UTExportedTypeDeclarations，设置支持的文档类型UTI。首先，我们要在Info.plist文件中设置Document types。[title] [] [url] [link text]12345678910111213&lt;key&gt;CFBundleDocumentTypes&lt;/key&gt;&lt;array&gt; &lt;dict&gt; &lt;key&gt;CFBundleTypeName&lt;/key&gt; &lt;string&gt;myapp&lt;/string&gt; &lt;key&gt;LSHandlerRank&lt;/key&gt; &lt;string&gt;Default&lt;/string&gt; &lt;key&gt;LSItemContentTypes&lt;/key&gt; &lt;array&gt; &lt;string&gt;com.customApp.myApp&lt;/string&gt; &lt;/array&gt; &lt;/dict&gt;&lt;/array&gt;CFBundleTypeName： 文档的类型名称，这里我将分享的文件压缩打包成*.myapp格式LSHandlerRank： 这里指是否拥有子文档LSItemContentTypes： 这里填写你App的bundle identifier 然后我们来定义UTI：[title] [] [url] [link text]12345678910111213141516&lt;key&gt;UTExportedTypeDeclarations&lt;/key&gt;&lt;array&gt; &lt;dict&gt; &lt;key&gt;UTTypeConformsTo&lt;/key&gt; &lt;array&gt; &lt;string&gt;&lt;/string&gt; &lt;/array&gt; &lt;key&gt;UTTypeIdentifier&lt;/key&gt; &lt;string&gt;com.customApp.myApp&lt;/string&gt; &lt;key&gt;UTTypeTagSpecification&lt;/key&gt; &lt;dict&gt; &lt;key&gt;public.filename-extension&lt;/key&gt; &lt;string&gt;myapp&lt;/string&gt; &lt;/dict&gt; &lt;/dict&gt;&lt;/array&gt;UTTypeIdentifier： 里填写自己App的 bundle identifierpublic.filename-extension： 这里填写你压缩包的扩展名。 可以打开txt，pdf，doc的示例：[title] [] [url] [link text]123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&lt;key&gt;CFBundleDocumentTypes&lt;/key&gt;&lt;array&gt; &lt;dict&gt; &lt;key&gt;CFBundleTypeIconFiles&lt;/key&gt; &lt;array&gt; &lt;string&gt;AppIcon@2x.png&lt;/string&gt; &lt;string&gt;AppIcon.png&lt;/string&gt; &lt;/array&gt; &lt;key&gt;CFBundleTypeName&lt;/key&gt; &lt;string&gt;Molecules Structure File&lt;/string&gt; &lt;key&gt;CFBundleTypeRole&lt;/key&gt; &lt;string&gt;Viewer&lt;/string&gt; &lt;key&gt;LSHandlerRank&lt;/key&gt; &lt;string&gt;Owner&lt;/string&gt; &lt;key&gt;LSItemContentTypes&lt;/key&gt; &lt;array&gt; &lt;string&gt;com.NeilLee.ChoRong&lt;/string&gt; &lt;string&gt;org.gnu.gnu-zip-archive&lt;/string&gt; &lt;/array&gt; &lt;/dict&gt;&lt;/array&gt;&lt;key&gt;UTExportedTypeDeclarations&lt;/key&gt;&lt;array&gt; &lt;dict&gt; &lt;key&gt;UTTypeConformsTo&lt;/key&gt; &lt;array&gt; &lt;string&gt;public.plain-text&lt;/string&gt; &lt;string&gt;public.text&lt;/string&gt; &lt;/array&gt; &lt;key&gt;UTTypeDescription&lt;/key&gt; &lt;string&gt;Molecules Structure File&lt;/string&gt; &lt;key&gt;UTTypeIdentifier&lt;/key&gt; &lt;string&gt;com.NeilLee.ChoRong&lt;/string&gt; &lt;key&gt;UTTypeTagSpecification&lt;/key&gt; &lt;dict&gt; &lt;key&gt;public.filename-extension&lt;/key&gt; &lt;array&gt; &lt;string&gt;txt&lt;/string&gt; &lt;string&gt;pdf&lt;/string&gt; &lt;string&gt;doc&lt;/string&gt; &lt;string&gt;docx&lt;/string&gt; &lt;/array&gt; &lt;key&gt;public.mime-type&lt;/key&gt; &lt;array&gt; &lt;string&gt;application/x-tex&lt;/string&gt; &lt;string&gt;application/pdf&lt;/string&gt; &lt;string&gt;application/msword&lt;/string&gt; &lt;/array&gt; &lt;/dict&gt; &lt;/dict&gt;&lt;/array&gt;这样在自己的app中就可以访问其他app的文件了。在AppDelegate中实现下面的函数。注意：需要去掉”file://“才能访问。[title] [] [url] [link text]123456789101112131415161718192021- (BOOL)application:(UIApplication *)application openURL:(NSURL *)url sourceApplication:(NSString *)sourceApplication annotation:(id)annotation &#123; if (url != nil) &#123; NSString *path = [url absoluteString]; NSMutableString *string = [[NSMutableStringalloc] initWithString:path]; if ([path hasPrefix:@&quot;file://&quot;]) &#123; [string replaceOccurrencesOfString:@&quot;file://&quot;withString:@&quot;&quot;options:NSCaseInsensitiveSearchrange:NSMakeRange(0, path.length)]; &#125; NSLog(@&quot;%@&quot;,string); &#125; return YES;&#125;","tags":[{"name":"iOS","slug":"iOS","permalink":"http://chorong.club/tags/iOS/"}]},{"title":"Hello World","date":"2017-01-19T10:03:45.000Z","path":"2017/01/19/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]